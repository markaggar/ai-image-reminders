# AI Image Reminders - Complete Package
# Generated from modular components: 2025-08-23 21:02:28
# Source: Modular components in src/

# Template Sensors
template:
# Family Room Analysis Sensors
- binary_sensor:
    name: "Family Room Needs Tidying"
    unique_id: family_room_needs_tidying
    state: >
      {{ states('sensor.family_room_analysis') == 'needs_tidying' }}
    device_class: problem
    icon: mdi:sofa
- sensor:
    name: "Family Room Analysis"
    unique_id: family_room_analysis_sensor
    state: >
      {{ states('input_text.family_room_analysis_result') | default('unknown') }}
    attributes:
      specific_tasks: >
        {{ states('input_text.family_room_specific_tasks') | default('Set up AI Tasks integration for automated analysis') }}
      last_updated: "{{ states('input_datetime.family_room_last_check') | default('never') }}"
      threshold: "{{ states('input_number.family_room_cleanliness_threshold') }}%"
# Kitchen Analysis Sensors
- binary_sensor:
    name: "Kitchen Needs Cleaning"
    unique_id: kitchen_needs_cleaning
    state: >
      {{ states('sensor.kitchen_analysis') == 'needs_cleaning' }}
    device_class: problem
    icon: mdi:silverware-fork-knife
- sensor:
    name: "Kitchen Analysis"
    unique_id: kitchen_analysis_sensor
    state: >
      {{ states('input_text.kitchen_analysis_result') | default('unknown') }}
    attributes:
      specific_tasks: >
        {{ states('input_text.kitchen_specific_tasks') | default('Set up AI Tasks integration for automated analysis') }}
      last_updated: "{{ states('input_datetime.kitchen_last_check') | default('never') }}"
      threshold: "{{ states('input_number.kitchen_cleanliness_threshold') }}%"
# AI Detection Status and Driveway Sensors
- sensor:
    name: "AI Detection Status"
    unique_id: ai_detection_status
    state: >
      {% if is_state('input_boolean.ai_detection_enabled', 'on') %}
        {% set kitchen_check = states('input_datetime.kitchen_last_check') %}
        {% set family_check = states('input_datetime.family_room_last_check') %}
        {% set now_ts = as_timestamp(now()) %}
        
        {% if kitchen_check != 'unknown' %}
          {% set kitchen_age = (now_ts - as_timestamp(kitchen_check)) / 60 %}
        {% else %}
          {% set kitchen_age = 999 %}
        {% endif %}
        
        {% if family_check != 'unknown' %}
          {% set family_age = (now_ts - as_timestamp(family_check)) / 60 %}
        {% else %}
          {% set family_age = 999 %}
        {% endif %}
        
        {% if kitchen_age < 30 and family_age < 45 %}
          active
        {% elif kitchen_age < 60 and family_age < 90 %}
          monitoring
        {% else %}
          checking
        {% endif %}
      {% else %}
        disabled
      {% endif %}
    icon: >
      {% if is_state('sensor.ai_detection_status', 'active') %}
        mdi:brain
      {% elif is_state('sensor.ai_detection_status', 'monitoring') %}
        mdi:brain-outline
      {% elif is_state('sensor.ai_detection_status', 'checking') %}
        mdi:brain-loading
      {% else %}
        mdi:brain-off
      {% endif %}
- sensor:
    name: "Driveway Analysis"
    unique_id: driveway_analysis_sensor
    state: >
      {{ states('input_text.driveway_analysis_result') | default('empty') }}
    attributes:
      last_updated: "{{ states('input_datetime.last_walk_detection') | default('never') }}"
      monitoring_active: "{{ is_state('input_boolean.dog_walk_monitoring_enabled', 'on') }}"

# Automations
automation:
# Kitchen AI Analysis Automation
- id: trigger_kitchen_analysis
  alias: "Trigger Kitchen AI Analysis"
  description: "Analyze kitchen cleanliness when person motion detected"
  trigger:
    # Trigger when person motion turns on (person enters kitchen)
    - platform: state
      entity_id: binary_sensor.kitchen_person_motion
      to: "on"
    # Trigger when person motion turns off (person leaves kitchen)  
    - platform: state
      entity_id: binary_sensor.kitchen_person_motion
      to: "off"
      for:
        minutes: 2  # Wait 2 minutes after person leaves to analyze
    # Manual trigger via force check button
    - platform: state
      entity_id: input_boolean.force_kitchen_check
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.ai_detection_enabled
      state: "on"
    - condition: state
      entity_id: input_boolean.kitchen_monitoring_enabled
      state: "on"
    # Only analyze if camera entity is configured
    - condition: template
      value_template: >
        {{ states('input_text.kitchen_camera_entity') not in ['unknown', ''] }}
    # Check if analysis is needed (based on time since last check or force check)
    - condition: or
      conditions:
        - condition: state
          entity_id: input_boolean.force_kitchen_check
          state: "on"
        - condition: template
          value_template: >
            {% set last_check = states('input_datetime.kitchen_last_check') %}
            {% if last_check == 'unknown' %}
              true
            {% else %}
              {{ (as_timestamp(now()) - as_timestamp(last_check)) > 300 }}
            {% endif %}
  action:
    # Update last check time
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.kitchen_last_check
      data:
        datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
        
    # Take camera snapshot and call AI Tasks for kitchen analysis
    - service: camera.snapshot
      target:
        entity_id: "{{ states('input_text.kitchen_camera_entity') }}"
      data:
        filename: "/config/www/local/kitchen_snapshot.jpg"
        
    - service: ai_task.generate_data
      data:
        task_name: "kitchen_cleanliness_analysis"
        instructions: >
          Analyze this kitchen image for food safety and basic cleanliness. Focus on:
          1. Food items left out on counters (especially perishable items)
          2. Dirty dishes in sink or on counters
          3. Spills or messes that could attract pests
          4. General tidiness that affects food preparation safety
          
          Categorize as:
          - "clean" if kitchen is suitable for food preparation
          - "needs_attention" if there are minor issues (few dishes, small spills)
          - "needs_cleaning" if there are food safety concerns (food left out, many dirty dishes, significant mess)
          
          Be family-friendly and focus on health/safety rather than perfection.
          Respond with just the category, then provide 2-3 specific helpful suggestions.
        attachments:
          - media_content_id: media-source://media_source/local/kitchen_snapshot.jpg
            media_content_type: image/jpeg
        entity_id: ai_task.google_ai_task
      response_variable: kitchen_ai_response
      
    # Parse and store analysis result
    - service: input_text.set_value
      target:
        entity_id: input_text.kitchen_analysis_result
      data:
        value: >
          {% if 'clean' in kitchen_ai_response.data | lower %}
            clean
          {% elif 'needs_cleaning' in kitchen_ai_response.data | lower %}
            needs_cleaning
          {% elif 'needs_attention' in kitchen_ai_response.data | lower %}
            needs_attention
          {% else %}
            unknown
          {% endif %}
    
    # Store specific tasks/suggestions
    - service: input_text.set_value
      target:
        entity_id: input_text.kitchen_specific_tasks
      data:
        value: "{{ kitchen_ai_response.data }}"
    
    # Turn off force check trigger  
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.force_kitchen_check

# Input Boolean Helpers
input_boolean:
# Input Boolean Helper Entities
ai_detection_enabled:
  name: "AI Detection System Enabled"
  icon: mdi:brain
kitchen_monitoring_enabled:
  name: "Kitchen Monitoring Enabled" 
  icon: mdi:chef-hat
family_room_monitoring_enabled:
  name: "Family Room Monitoring Enabled"
  icon: mdi:sofa
dog_walk_monitoring_enabled:
  name: "Dog Walk Monitoring Enabled"
  icon: mdi:dog
dog_walk_reminders_enabled:
  name: "Dog Walk Reminders Enabled"
  icon: mdi:dog
force_kitchen_check:
  name: "Force Kitchen Check"
  icon: mdi:camera-iris
force_family_room_check:
  name: "Force Family Room Check" 
  icon: mdi:camera-iris
person_images_ready:
  name: "Person Images Ready"
  icon: mdi:account-check
  
pet_images_ready:
  name: "Pet Images Ready"
  icon: mdi:dog

