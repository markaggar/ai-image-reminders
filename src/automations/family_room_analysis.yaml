# Family Room AI Analysis Automation
- id: trigger_family_room_analysis
  alias: "Trigger Family Room AI Analysis"
  description: "Analyze family room tidiness when person motion detected"
  trigger:
    # Trigger when person motion turns on (person enters family room)
    - platform: state
      entity_id: binary_sensor.family_room_person_motion
      to: "on"
    # Trigger when person motion turns off (person leaves family room)
    - platform: state
      entity_id: binary_sensor.family_room_person_motion
      to: "off" 
      for:
        minutes: 2  # Wait 2 minutes after person leaves to analyze
    # Manual trigger via force check button
    - platform: state
      entity_id: input_boolean.force_family_room_check
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.ai_detection_enabled
      state: "on"
    - condition: state
      entity_id: input_boolean.family_room_monitoring_enabled
      state: "on"
    # Only analyze if camera entity is configured
    - condition: template
      value_template: >
        {{ states('input_text.family_room_camera_entity') not in ['unknown', ''] }}
    # Check that AI task entity is available
    - condition: template
      value_template: >
        {{ states('input_text.ai_task_entity') not in ['unknown', 'unavailable', ''] }}
    # Check if analysis is needed (based on time since last check or force check)
    - condition: or
      conditions:
        - condition: state
          entity_id: input_boolean.force_family_room_check
          state: "on"
        - condition: template
          value_template: >
            {% set last_check = states('input_datetime.family_room_last_check') %}
            {% if last_check == 'unknown' %}
              true
            {% else %}
              {{ (as_timestamp(now()) - as_timestamp(last_check)) > 300 }}
            {% endif %}
  action:
    # Update last check time
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.family_room_last_check
      data:
        datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
    
    # Take camera snapshots for family room analysis
    - service: camera.snapshot
      target:
        entity_id: "{{ states('input_text.family_room_camera_entity') }}"
      data:
        filename: "/config/www/local/ai_image_notifications/family_room_snapshot.jpg"
        
    # Take additional snapshot from kitchen camera (left side view into family room)
    - service: camera.snapshot
      target:
        entity_id: "{{ states('input_text.kitchen_camera_entity') }}"
      data:
        filename: "/config/www/local/ai_image_notifications/family_room_kitchen_view_snapshot.jpg"
    
    - service: ai_task.generate_data
      data:
        task_name: "family_room_tidiness_analysis"
        instructions: >
          Analyze these family room/living room images. Focus ONLY on practical safety and cleanliness.
          Rate tidiness 0-100. If below {{ states('input_number.family_room_cleanliness_threshold') }}, 
          respond "needs_tidying" and list issues. If above, respond "tidy".

          Analysis of the family_room_kitchen_view_snapshot.jpg should exclude anything that is the kitchen. The family room is to the top left of the image, near the couch. If you see dirty dishes on the desk area between the kitchen and the family room, call that out too, but ignore the general clutter.

          ONLY flag these issues:
          - Food/drinks left out (especially if sticky/messy)
          - Dishes with food residue  
          - Items on the floor (tripping hazard)
          - Spills that need cleaning
          
          IGNORE: blankets on chairs, remotes on tables, books/papers, decorative items, stuffed animals on furniture, charging cables
        attachments:
          - media_content_id: media-source://media_source/local/ai_image_notifications/family_room_snapshot.jpg
            media_content_type: image/jpeg
          - media_content_id: media-source://media_source/local/ai_image_notifications/family_room_kitchen_view_snapshot.jpg
            media_content_type: image/jpeg
        entity_id: ai_task.google_ai_task
      response_variable: family_room_ai_response
    
    # Store analysis result and tasks in variable sensor
    - service: variable.update_sensor
      data:
        value: >
          {% set response = family_room_ai_response.data | lower %}
          {% if 'needs_tidying' in response %}
            needs_tidying
          {% elif 'tidy' in response %}
            tidy  
          {% else %}
            unknown
          {% endif %}
        attributes:
          timestamp: "{{ now() }}"
          tasks: >
            {% set response = family_room_ai_response.data %}
            {% set ns = namespace(filtered=[]) %}
            {% for line in response.split('\n') %}
              {% if not ('needs_tidying' in line.lower() or 'tidy' in line.lower()) %}
                {% set ns.filtered = ns.filtered + [line] %}
              {% endif %}
            {% endfor %}
            {{ ns.filtered | join('\n') | trim }}
        replace_attributes: true
      target:
        entity_id: sensor.family_room_tidy_status

    # Turn off force check trigger  
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.force_family_room_check

